<?xml version="1.0" encoding="UTF-8"?>
<project name="UT coverage with Ant and JaCoCo running tests" default="all" basedir="." xmlns:jacoco="antlib:org.jacoco.ant" xmlns:sonar="antlib:org.sonar.ant">

    <!-- ========= Define the main properties of this project ========= -->
    <property name="src.dir" value="./src" />
    <property name="test.dir" value="./src" />
    <property name="lib.dir" value="./lib" />
    <property name="build.dir" value="./target" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="reports.dir" value="${build.dir}/reports" />
	<property name="exec.file" location="${build.dir}/jacoco.exec"/>
    <property name="reports.junit.xml.dir" value="${reports.dir}/junit" />
   
    <!-- Define the Sonar properties -->
   
    <!--<property name="sonar.jdbc.url" value="jdbc:mysql://localhost:3306/sonar332?useUnicode=true&amp;characterEncoding=utf8" />
        <property name="sonar.jdbc.driverClassName" value="com.mysql.jdbc.Driver" /> -->

        <!-- the username and password of your database 
        <property name="sonar.jdbc.username" value="root" />
        <property name="sonar.jdbc.password" value="password" /> -->

    <property name="sonar.projectKey" value="org.sonarqube:colessample" />
    <property name="sonar.projectName" value="colessample" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.language" value="java" />
    <property name="sonar.sources" value="${src.dir}" />
    <property name="sonar.tests" value="${test.dir}" />
	<property name="sonar.test.inclusions" value="**/Test*" />
	<property name="sonar.exclusions" value="**/Test*" />
    <property name="sonar.binaries" value="${classes.dir}" />
    <property name="sonar.sourceEncoding" value="UTF-8" />
    <property name="sonar.surefire.reportsPath" value="${reports.junit.xml.dir}" />  

    <!-- The following properties are required to use JaCoCo: -->
    <property name="sonar.dynamicAnalysis" value="reuseReports" />
    <property name="sonar.java.coveragePlugin" value="jacoco" />
    <property name="sonar.jacoco.reportPath" value="${exec.file}" />
 
    <!-- ========= Define "regular" targets: clean, compile, test, ... ========= -->
    
	<target name="clean">
        <delete dir=".sonar" />
        <delete dir="${build.dir}" />
        <delete dir="${reports.dir}" />
    </target>

    <target name="init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${reports.dir}" />
        <mkdir dir="${reports.junit.xml.dir}" />
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" includeantruntime="false" destdir="${classes.dir}" classpathref="classpath"  />
        <javac srcdir="${test.dir}" includeantruntime="false" destdir="${classes.dir}" classpathref="classpath" />
    </target>

       
    <path id="classpath">   
		<fileset dir="${lib.dir}" includes="*.jar"/>
		<pathelement location="${classes.dir}"/>
    </path>
      
    <target name="test" depends="compile">
		<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </taskdef>
		
        
		<!-- Import the JaCoCo Ant Task -->
        <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
           <classpath>
                <path refid="classpath"/>
            </classpath>
        </taskdef>
   
        <!-- Run your unit tests, adding the JaCoCo agent -->
        <jacoco:coverage destfile="${exec.file}" xmlns:jacoco="antlib:org.jacoco.ant">
			<junit printsummary="yes" haltonfailure="yes" fork="yes" forkmode="once" failureProperty="test.failed">
				<classpath refid="classpath" />
				<formatter type="plain" />
				<formatter type="xml" />
				<batchtest fork="true" todir="${reports.junit.xml.dir}">
				  <fileset dir="${test.dir}">
					<include name="**/Test*.java" />
				  </fileset>
				</batchtest>
			</junit> 
       </jacoco:coverage>
		
    </target>
	
	<target name="report" depends="test">
		<!--  Step 3: Create coverage report  -->
		<jacoco:report>
			<!--
			 This task needs the collected execution data and ... 
			-->
			<executiondata>
				<file file="${exec.file}"/>
			</executiondata>
			<!--  the class files and optional source files ...  -->
			<structure name="JaCoCo Ant Example">
				<classfiles>
					<fileset dir="${classes.dir}"/>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src.dir}"/>
				</sourcefiles>
			</structure>
			 <!--  to produce reports in different formats.  -->
			<html destdir="${report.dir}"/>
			<csv destfile="${report.dir}/report.csv"/>
			<xml destfile="${report.dir}/report.xml"/>
		</jacoco:report>
	</target>

    <!-- ========= Define Sonar target ========= -->
    <target name="sonar" depends="test">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
            <classpath location="${lib.dir}" />
			<classpath refid="classpath" />
        </taskdef>
       
        <!-- Execute Sonar -->
         <sonar:sonar/>
    </target>

    <!-- ========= The main target "all" ========= -->
    <target name="all" depends="clean,compile,test,report,sonar" />

</project>